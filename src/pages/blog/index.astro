---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Sidebar from '../../components/Sidebar.jsx';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

import '../../styles/blogPostIndex.css'


const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---


<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    
  </head>
  <body>
    <Header />

	<div class="three-column-layout">
		<!-- Left side: Archive Sidebar -->
		 <aside class="sidebar-left">
			<Sidebar posts={posts} client:load/>
			<button onclick="document.querySelectorAll('.blog_post').forEach(p => p.style.display = 'block')">
				Show All Posts
			  </button>
		 </aside>

		 <!-- Center: Blog Posts -->
		  <div class="content-wrapper">
			<main class="blog-content">
				<h1>Blog Posts</h1>
			</main>
			{posts.map((post) => (
				<a
				  href={`/blog/${post.id}/`}
				  class="blog_post"
				  data-date={post.data.pubDate.toISOString()}
				>
				  <img class="blog_img" src={post.data.previewImage} alt={post.data.title} />
				  <div class="blog_content">
					<h4 class="title">{post.data.title}</h4>
					<h6 class="description">{post.data.description}</h6>
					<p class="date">
					  <FormattedDate date={post.data.pubDate} />
					</p>
				  </div>
				</a>
			  ))}
		  </div>
		  <!-- Right Side: Table of Contents -->
		  <aside class="sidebar-right">
			<h2>Table of Contents</h2>
			<ul>
			  {posts.map((post) => (
				<li><a href={`/blog/${post.id}/`}>{post.data.title}</a></li>
			  ))}
			</ul>
		  </aside>
	</div>
    <Footer />
	<script type="module">
		window.addEventListener('archive-filter', (e) => {
		  const { year, month } = e.detail;
	  
		  document.querySelectorAll('.blog_post').forEach((el) => {
			const dateStr = el.dataset.date;
			if (!dateStr) return;
	  
			const postDate = new Date(dateStr);
			const postYear = postDate.getFullYear().toString();
			const postMonth = postDate.toLocaleString('default', { month: 'long' });
	  
			const matches = postYear === year && postMonth === month;
	  
			el.style.display = matches ? 'block' : 'none';
		  });
		});
	  </script>
	  
  </body>
</html>
